# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
spring-boot-starter = '2.5.14'
dependency-management = '1.1.4'
fastjson = '2.0.21'
mybatis-plus-boot-starter = '3.5.3.1'
mybatis-plus-generator = '3.5.3'
cat-client = '3.1.0'
jmockdata = '4.3.0'
jasypt-spring-boot-starter = '3.0.5'
google-zxing = '3.5.1'
log4jdbc = '1.2'
beetl-framework-starter = '1.2.40.Beetl.RELEASE'
influxdb-client-java = '6.10.0'
enjoy = '5.0.3'
ojdbc8 = '21.8.0.0'
orai18n = '19.3.0.0'
okhttp = '3.12.0'
io-jsonwebtoken = '0.11.2'
io-springfox = '3.0.0'
mysql-connector-java = '8.0.29'
ehcache = '2.10.9.2'
activemq-pool = '5.17.0'
commons-lang3 = '3.12.0'
curator-recipes = '5.3.0'
httpclient = '4.5.13'
rocketmq-client = '5.1.0'
shiro-spring = '1.13.0'
velocity-engine-core = '2.3'
awaitility = '4.2.0'
bcprov-jdk15on = '1.70'
shiro-redis = '3.3.1'
org-eclipse-paho-client-mqttv3 = '1.2.5'
java-websocket = '1.5.3'
mockito-inline = '3.9.0'
lombok = '1.18.24'
spring-kafka = '2.7.14'

[libraries]
fastjson = { module = 'com.alibaba:fastjson', version.ref = 'fastjson' }
mybatis-plus-boot-starter = { module = 'com.baomidou:mybatis-plus-boot-starter', version.ref = 'mybatis-plus-boot-starter' }
mybatis-plus-generator = { module = 'com.baomidou:mybatis-plus-generator', version.ref = 'mybatis-plus-generator' }
cat-client = { module = 'com.dianping.cat:cat-client', version.ref = 'cat-client' }
jmockdata = { module = 'com.github.jsonzou:jmockdata', version.ref = 'jmockdata' }
jasypt-spring-boot-starter = { module = 'com.github.ulisesbocchio:jasypt-spring-boot-starter', version.ref = 'jasypt-spring-boot-starter' }
zxing-core = { module = 'com.google.zxing:core', version.ref = 'google-zxing' }
zxing-javase = { module = 'com.google.zxing:javase', version.ref = 'google-zxing' }
log4jdbc = { module = 'com.googlecode.log4jdbc:log4jdbc', version.ref = 'log4jdbc' }
beetl-framework-starter = { module = 'com.ibeetl:beetl-framework-starter', version.ref = 'beetl-framework-starter' }
influxdb-client-java = { module = 'com.influxdb:influxdb-client-java', version.ref = 'influxdb-client-java' }
enjoy = { module = 'com.jfinal:enjoy', version.ref = 'enjoy' }
ojdbc8 = { module = 'com.oracle.database.jdbc:ojdbc8', version.ref = 'ojdbc8' }
orai18n = { module = 'com.oracle.ojdbc:orai18n', version.ref = 'orai18n' }
okhttp = { module = 'com.squareup.okhttp3:okhttp', version.ref = 'okhttp' }
jjwt-api = { module = 'io.jsonwebtoken:jjwt-api', version.ref = 'io-jsonwebtoken' }
jjwt-impl = { module = 'io.jsonwebtoken:jjwt-impl', version.ref = 'io-jsonwebtoken' }
jjwt-jackson = { module = 'io.jsonwebtoken:jjwt-jackson', version.ref = 'io-jsonwebtoken' }
springfox-swagger-ui = { module = 'io.springfox:springfox-swagger-ui', version.ref = 'io-springfox' }
springfox-swagger2 = { module = 'io.springfox:springfox-swagger2', version.ref = 'io-springfox' }
mysql-connector-java = { module = 'mysql:mysql-connector-java', version.ref = 'mysql-connector-java' }
ehcache = { module = 'net.sf.ehcache:ehcache', version.ref = 'ehcache' }
activemq-pool = { module = 'org.apache.activemq:activemq-pool', version.ref = 'activemq-pool' }
commons-lang3 = { module = 'org.apache.commons:commons-lang3', version.ref = 'commons-lang3' }
curator-recipes = { module = 'org.apache.curator:curator-recipes', version.ref = 'curator-recipes' }
httpclient = { module = 'org.apache.httpcomponents:httpclient', version.ref = 'httpclient' }
rocketmq-client = { module = 'org.apache.rocketmq:rocketmq-client', version.ref = 'rocketmq-client' }
shiro-spring = { module = 'org.apache.shiro:shiro-spring', version.ref = 'shiro-spring' }
velocity-engine-core = { module = 'org.apache.velocity:velocity-engine-core', version.ref = 'velocity-engine-core' }
awaitility = { module = 'org.awaitility:awaitility', version.ref = 'awaitility' }
bcprov-jdk15on = { module = 'org.bouncycastle:bcprov-jdk15on', version.ref = 'bcprov-jdk15on' }
shiro-redis = { module = 'org.crazycake:shiro-redis', version.ref = 'shiro-redis' }
org-eclipse-paho-client-mqttv3 = { module = 'org.eclipse.paho:org.eclipse.paho.client.mqttv3', version.ref = 'org-eclipse-paho-client-mqttv3' }
java-websocket = { module = 'org.java-websocket:Java-WebSocket', version.ref = 'java-websocket' }
mockito-inline = { module = 'org.mockito:mockito-inline', version.ref = 'mockito-inline' }
lombok = { module = 'org.projectlombok:lombok', version.ref = 'lombok' }
spring-boot-configuration-processor = { module = 'org.springframework.boot:spring-boot-configuration-processor', version = '' }
spring-boot-starter-activemq = { module = 'org.springframework.boot:spring-boot-starter-activemq', version = '' }
spring-boot-starter-actuator = { module = 'org.springframework.boot:spring-boot-starter-actuator', version = '' }
spring-boot-starter-aop = { module = 'org.springframework.boot:spring-boot-starter-aop', version = '' }
spring-boot-starter-cache = { module = 'org.springframework.boot:spring-boot-starter-cache', version = '' }
spring-boot-starter-data-redis = { module = 'org.springframework.boot:spring-boot-starter-data-redis', version = '' }
spring-boot-starter-freemarker = { module = 'org.springframework.boot:spring-boot-starter-freemarker', version = '' }
spring-boot-starter-mail = { module = 'org.springframework.boot:spring-boot-starter-mail', version = '' }
spring-boot-starter-test = { module = 'org.springframework.boot:spring-boot-starter-test', version = '' }
spring-boot-starter-thymeleaf = { module = 'org.springframework.boot:spring-boot-starter-thymeleaf', version = '' }
spring-boot-starter-validation = { module = 'org.springframework.boot:spring-boot-starter-validation', version = '' }
spring-boot-starter-web = { module = 'org.springframework.boot:spring-boot-starter-web', version = '' }
spring-boot-starter-webflux = { module = 'org.springframework.boot:spring-boot-starter-webflux', version = '' }
spring-boot-starter-websocket = { module = 'org.springframework.boot:spring-boot-starter-websocket', version = '' }
spring-kafka = { module = 'org.springframework.kafka:spring-kafka', version.ref = 'spring-kafka' }

[plugins]
org-springframework-boot = { id = 'org.springframework.boot', version.ref = 'spring-boot-starter' }
io-spring-dcependency-management = { id = 'io.spring.dependency-management', version.ref = 'dependency-management' }